#oops
# class Student:
#     counter=0
#
#     def __init__(self,name):             #__called dunder
#         self.name=name
#         Student.counter +=1
#         self.rollNum= Student.counter
#
#
#     def __str__(self):
#         return f'{self.name}.{self.rollNum}'

#s1=Student('anne')
#print(s1.name,s1.rollNum)
#print(str(s1))

#s2=Student('bill')
#print(s2.name,s2.rollNum)
#print(s2)

# Student.counter=2
# print(Student.counter)
# print(s1.counter)
# print(s2.counter)

#
class Account:
    counter=0
    def __init__(self, openingBal = 0):
        self.__bal = openingBal
        Account.counter += 1
        self.id = Account.counter
        self.numTrans = 0
        self.maxTrans = 2

    def deposit(self,amount):
        if amount > 0  and self.numTrans < self.maxTrans:
           self.__bal += amount
           self.numTrans += 1

    def withdraw(self,amount):
        if 0< amount <= self.__bal  and  self.numTrans < self.maxTrans:
           self.__bal -= amount
           self.numTrans +=1

    def getBalance(self):
        return self.__bal

    def addInterest(self,amount):
        self.__bal +=amount

    def __str__(self):
        return f' acc{self.id} has {self.__bal}'



class SavingsAccount(Account):

    def getInterest(self):
        return self.getBalance()*0.05

    def addInterest(self):
        amount = self.getInterest()
        super().addInterest(amount)

class CurrentAccount(Account):
    def __init__(self, openingBal = 0):
        super().__init__(openingBal)
        self.maxTrans =5       #float('inf')

    def addInterest(self,amount):
        pass


sa1 = SavingsAccount(100)
sa1.deposit(100)
sa1.withdraw(10)
sa1.withdraw(10)
sa1.withdraw(10)
sa1.withdraw(10)
print(sa1)
print(sa1.getInterest())
sa1.addInterest()
print(sa1)































































































































































































































































































































































































































































































































































































































































































































































